[package]
name = "canvas-test"
version = "0.0.3"
edition = "2021"
description = "Engine for canvas-test"
license = "MIT"
repository = "https://github.com/jarmillemich/rust-canvas-test"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = { version = "0.2.74", features = ['serde-serialize' ] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }
js-sys = "0.3.61"
bitmask-enum = "2.1.0"
fixed = "1.23.0"
serde_json = "1.0.95"
serde-wasm-bindgen = "0.5.0"
tokio = { version = "1.27.0", features = ["time"] }
futures = "0.3.28"
anyhow = "1.0.70"
flexbuffers = "2.0.0"
bevy = { version = "0.10.1" }
serde = "1.0.163"
serde_derive = "1.0.163"
ron = "0.8.0"
newtype_derive = "0.1.6"
custom_derive = "0.1.7"
base64 = "0.21.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3

[dependencies.web-sys]
version = "0.3.4"
features = [
  'Document',
  'Element',
  'HtmlCanvasElement',
  'WebGlBuffer',
  'WebGlVertexArrayObject',
  'WebGl2RenderingContext',
  'WebGlProgram',
  'WebGlShader',
  'WebGlUniformLocation',
  'Window',
  'console',
  'MouseEvent',
  'KeyboardEvent',
  
  # RTC Items
  'MessageEvent',
  'RtcPeerConnection',
  'RtcSignalingState',
  'RtcSdpType',
  'RtcSessionDescriptionInit',
  'RtcPeerConnectionIceEvent',
  'RtcIceCandidate',
  'RtcDataChannel',
  'RtcDataChannelEvent',
  'RtcConfiguration',
  'RtcIceGatheringState',
]
